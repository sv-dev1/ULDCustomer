//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ULDCustomer.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ULDEntities : DbContext
    {
        public ULDEntities()
            : base("name=ULDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<ULDCustomer> ULDCustomers { get; set; }
        public DbSet<ULDProduct> ULDProducts { get; set; }
        public DbSet<ULDQuestion> ULDQuestions { get; set; }
        public DbSet<ULDSurvey> ULDSurveys { get; set; }
        public DbSet<ULDSurveyAnswer> ULDSurveyAnswers { get; set; }
    
        public virtual ObjectResult<sp_GetPlans_Result> sp_GetPlans()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPlans_Result>("sp_GetPlans");
        }
    
        public virtual ObjectResult<Nullable<decimal>> uld_CustomerInsert(string firstName, string lastName, string email, Nullable<int> uLDSurveyID)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var uLDSurveyIDParameter = uLDSurveyID.HasValue ?
                new ObjectParameter("ULDSurveyID", uLDSurveyID) :
                new ObjectParameter("ULDSurveyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uld_CustomerInsert", firstNameParameter, lastNameParameter, emailParameter, uLDSurveyIDParameter);
        }
    
        public virtual int uld_CustomerValidate(Nullable<int> uLDCustomerID, Nullable<int> uLDProductID)
        {
            var uLDCustomerIDParameter = uLDCustomerID.HasValue ?
                new ObjectParameter("ULDCustomerID", uLDCustomerID) :
                new ObjectParameter("ULDCustomerID", typeof(int));
    
            var uLDProductIDParameter = uLDProductID.HasValue ?
                new ObjectParameter("ULDProductID", uLDProductID) :
                new ObjectParameter("ULDProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uld_CustomerValidate", uLDCustomerIDParameter, uLDProductIDParameter);
        }
    
        public virtual int uld_SurveyAnswerInsert(Nullable<int> uLDQuestionID, Nullable<int> uLDSurveyID, string answer)
        {
            var uLDQuestionIDParameter = uLDQuestionID.HasValue ?
                new ObjectParameter("ULDQuestionID", uLDQuestionID) :
                new ObjectParameter("ULDQuestionID", typeof(int));
    
            var uLDSurveyIDParameter = uLDSurveyID.HasValue ?
                new ObjectParameter("ULDSurveyID", uLDSurveyID) :
                new ObjectParameter("ULDSurveyID", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uld_SurveyAnswerInsert", uLDQuestionIDParameter, uLDSurveyIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> uld_SurveyCreate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("uld_SurveyCreate");
        }
    
        public virtual ObjectResult<string> uld_SurveyQuestionGet(Nullable<int> uLDQuestionID)
        {
            var uLDQuestionIDParameter = uLDQuestionID.HasValue ?
                new ObjectParameter("ULDQuestionID", uLDQuestionID) :
                new ObjectParameter("ULDQuestionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uld_SurveyQuestionGet", uLDQuestionIDParameter);
        }
    
        public virtual int sp_CustomerInsert(Nullable<int> uLDSurveyID, string firstName, string lastname, string email, Nullable<int> productIDPurchased)
        {
            var uLDSurveyIDParameter = uLDSurveyID.HasValue ?
                new ObjectParameter("ULDSurveyID", uLDSurveyID) :
                new ObjectParameter("ULDSurveyID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var productIDPurchasedParameter = productIDPurchased.HasValue ?
                new ObjectParameter("ProductIDPurchased", productIDPurchased) :
                new ObjectParameter("ProductIDPurchased", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CustomerInsert", uLDSurveyIDParameter, firstNameParameter, lastnameParameter, emailParameter, productIDPurchasedParameter);
        }
    }
}
